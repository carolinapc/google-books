{"version":3,"sources":["components/Navbar/index.jsx","components/Jumbotron/index.jsx","utils/GoogleAPI.js","utils/API.js","components/BookList/index.jsx","components/PageContainer/index.jsx","pages/Search/index.jsx","pages/Saved/index.jsx","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","exact","activeClassName","Jumbotron","URL","GoogleAPI","getBooks","query","console","log","axios","get","API","getBook","id","deleteBook","delete","saveBook","bookData","post","BookList","props","Fragment","books","map","book","authors","title","description","image","link","key","href","target","rel","type","_id","trim","disabled","onClick","renderButtons","src","alt","PageContainer","children","Search","state","search","booksSaved","notFoundMsg","componentDidMount","then","res","_this","setState","data","catch","err","onSubmit","event","preventDefault","GoogleApi","totalItems","items","_book$volumeInfo","volumeInfo","imageLinks","infoLink","thumbnail","bookSaved","filter","bSaved","length","join","b","handleInputChange","_event$target","name","value","Object","defineProperty","components_PageContainer","this","placeholder","aria-label","aria-describedby","autoComplete","onChange","components_BookList","React","Component","Saved","loadBooks","App","broadcastMsg","components_Navbar","components_Jumbotron","react_router","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.001b2723.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top shadow-lg\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n          Google Books\n        </NavLink>\n        <div>\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink\n                exact\n                to=\"/\"\n                activeClassName=\"active\"\n                className=\"nav-link\"\n              >\n                Search\n            </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink\n                to=\"/saved\"\n                activeClassName=\"active\"\n                className=\"nav-link\"\n              >\n                Saved\n            </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './style.css';\n\nconst Jumbotron = () => {\n  return ( \n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"display-4\"><i className=\"fas fa-book\"></i> Google Books Search</h1>\n        <p className=\"lead\">Search for and save books of interest.</p>\n      </div>\n    </div>\n  );\n}\n \nexport default Jumbotron;","import axios from \"axios\";\n\nconst KEY = \"AIzaSyB-U2UvyJ3bi8ZXATBe-Ui86LcwEVS5HMI\";\nconst URL = \"https://www.googleapis.com/books/v1/volumes?printType=books&key=\" + KEY + \"&q=\";\n\nexport default {\n  getBooks: query => {\n    console.log(URL + query);\n    return axios.get(URL + query);\n  }\n}\n\n","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }  \n};\n","import React from 'react';\nimport './style.css';\n\nconst BookList = props => {\n\n  const renderButtons = (book) => {\n    if (props.type === \"search\") {\n      if (book._id.trim() !== \"\") {\n        return (\n          <button disabled className=\"btn btn-outline-success\"><i className=\"fas fa-check\"></i> Saved</button>\n        );\n      }\n      else {\n        return (\n          <button className=\"btn btn-outline-secondary\" onClick={() => props.saveBook(book)}>\n            <i className=\"fas fa-cloud\"></i> Save\n          </button>\n        );\n      }\n    } \n    else {\n      return (\n        <button className=\"btn btn-outline-danger\" onClick={() => props.deleteBook(book._id)}>\n          <i className=\"far fa-trash-alt\"></i> Delete\n        </button>\n      );\n    }\n  }\n\n  return (\n    <>\n      {props.books.map(book => {\n        const { id, authors, title, description, image, link } = book;\n        return (\n          <div className=\"card shadow-sm bg-light\" key={id}>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{title}</h5>\n              <div className=\"wrap-button\">\n                <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-outline-secondary\"><i className=\"fas fa-external-link-alt\"></i> View</a>\n                {renderButtons(book)}\n              </div>\n              <h6 className=\"card-subtitle mb-2 text-muted\">Written by {authors}</h6>\n              <p className=\"card-text\">\n                <img src={image} alt={title} className=\"shadow-lg\" />\n                {description}\n              </p>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n \nexport default BookList;","import React from 'react';\n\nconst PageContainer = props => {\n  return (\n    <div className=\"container\">\n      <h3>{props.title}</h3>\n      {props.children}\n    </div>\n  );\n}\n \nexport default PageContainer;","import React from 'react';\nimport GoogleApi from '../../utils/GoogleAPI';\nimport API from '../../utils/API';\nimport BookList from '../../components/BookList';\nimport PageContainer from '../../components/PageContainer';\n//import io from \"socket.io-client\";\n\nclass Search extends React.Component {\n  state = {\n    search: \"\",\n    books: [],\n    booksSaved: [],\n    notFoundMsg: \"\"\n  }\n  \n  componentDidMount = () => {\n    API.getBooks()\n      .then(res => {\n        this.setState({ booksSaved: res.data });\n      })\n      .catch(err => console.log(err));\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    //search books on google api\n    GoogleApi.getBooks(this.state.search)\n      .then(res => {\n        \n        if (res.data.totalItems > 0) {\n          let books = res.data.items.map(book => {\n            const { authors, title, description, imageLinks, infoLink } = book.volumeInfo;\n            const image = imageLinks ? imageLinks.thumbnail : \"https://via.placeholder.com/150x200/C5C5C5/000000?text=no+image\";\n            \n            //check if the book was saved and get its _id (db id)\n            const bookSaved = this.state.booksSaved.filter(bSaved => bSaved.id === book.id);\n            const _id = bookSaved.length > 0 ? bookSaved[0]._id : \"\";\n            \n            return {\n              _id,\n              id: book.id,\n              title,\n              authors: authors.join(\", \"),\n              description,\n              image,\n              link: infoLink\n            }\n          });\n          \n          this.setState({ books });  \n        }\n        else {\n          this.setState({ books: [], notFoundMsg: \"No books were found\" });  \n        }\n      })\n      .catch(err => {\n        this.setState({ books: [], notFoundMsg: \"No books were found\" });\n      });\n    \n  }\n\n  saveBook = book => {\n    delete book._id;\n    API.saveBook(book)\n      .then((res) => {\n        const books = this.state.books.map(b => {\n          if (b.id === book.id) {\n            b._id = res.data._id;\n          }\n          return b;\n        });\n\n        this.setState({ books });\n        \n        //const socket = io(\"http://localhost:3001\");\n        //socket.emit(\"save_book\", `The book ${book.title} was saved!`);\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() { \n    return (\n      <PageContainer title=\"Book Search\">\n\n        <form onSubmit={this.onSubmit}>\n          <div className=\"input-group mb-3\">\n            <input\n              name=\"search\"\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Book Title\"\n              aria-label=\"Book Title\"\n              aria-describedby=\"btn-search\"\n              autoComplete=\"off\"\n              onChange={this.handleInputChange}\n            />\n            <div className=\"input-group-append\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-outline-secondary\"\n                id=\"btn-search\"\n              >\n                <i className=\"fas fa-search\"></i> Search\n              </button>\n            </div>\n          </div>\n        </form>\n\n        {this.state.books.length > 0 ? \n          <BookList type=\"search\" saveBook={this.saveBook} books={this.state.books} />\n          : this.state.notFoundMsg\n        }\n      </PageContainer>\n    );\n  }\n}\n \nexport default Search;","import React from 'react';\nimport API from '../../utils/API';\nimport BookList from '../../components/BookList';\nimport PageContainer from '../../components/PageContainer';\n\nclass Saved extends React.Component {\n  state = { books: [] };\n\n  componentDidMount = () => {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res => this.setState({ books: res.data }))\n      .catch(err => console.log(err));\n  }\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(() => this.loadBooks())\n      .catch(err => console.log(err));\n  }\n\n  render() { \n    return (\n      <PageContainer title=\"Saved Books\">\n        {this.state.books.length > 0 ? \n          <BookList type=\"saved\" deleteBook={this.deleteBook} books={this.state.books} />\n          : \"No books were found\"\n        }\n      </PageContainer>\n    );\n  }\n}\n \nexport default Saved;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n//import io from \"socket.io-client\";\n\n//Stateless Components\nimport NavBar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\n\n//Pages\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\n\n//CSS\nimport \"normalize.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    broadcastMsg: \"\"\n  }\n  \n  componentDidMount = () => {\n    // let socket = io(\"http://localhost:3001\");\n    // socket.on(\"save_book\", msg => {\n    //   this.setState({ broadcastMsg: msg });\n    // });\n  }\n\n  render() {\n    return (\n      <Router>\n        <NavBar />\n        <Jumbotron />\n        {this.state.broadcastMsg}\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved} />\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}